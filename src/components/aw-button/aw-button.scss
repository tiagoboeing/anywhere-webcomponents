@import '../../scss/includes/components';

/*
  Use following syntax:
  status-mode-property (css)

  Example:
  primary (status) - solid (mode) - color (text color)

  For states (like hover):
  status-mode-hover-property (css)
  -----------------------
  */

:host {
  @extend %component-host;

  --primary-solid-background: var(--primary);
  --primary-solid-color: var(--primary-text-color);
  --primary-solid-hover-background: var(--primary-hover);
  --secondary-solid-background: var(--secondary);
  --secondary-solid-color: var(--secondary-text-color);
  --secondary-solid-border-color: #c8c8c8;
  --secondary-solid-hover-background: var(--secondary-hover);
  --success-solid-background: var(--success);
  --success-solid-color: var(--success-text-color);
  --success-solid-hover-background: var(--success-hover);
  --danger-solid-background: var(--danger);
  --danger-solid-color: var(--danger-text-color);
  --danger-solid-hover-background: var(--danger-hover);
  --warn-solid-background: var(--warn);
  --warn-solid-color: var(--warn-text-color);
  --warn-solid-hover-background: var(--warn-hover);
  --info-solid-background: var(--info);
  --info-solid-color: var(--info-text-color);
  --info-solid-hover-background: var(--info-hover);

  --primary-gradient-color: var(--primary-text-color);
  --primary-gradient-background-fallback: var(--primary);
  --primary-gradient-background: linear-gradient(
    to right,
    var(--primary-gradient-1),
    var(--primary-gradient-2)
  );
  --secondary-gradient-color: var(--secondary-text-color);
  --secondary-gradient-border-color: #c8c8c8;
  --secondary-gradient-background-fallback: var(--secondary);
  --secondary-gradient-background: linear-gradient(
    to right,
    var(--secondary-gradient-1),
    var(--secondary-gradient-2)
  );
  --success-gradient-color: var(--success-text-color);
  --success-gradient-background-fallback: var(--success);
  --success-gradient-background: linear-gradient(
    to right,
    var(--success-gradient-1),
    var(--success-gradient-2)
  );
  --danger-gradient-color: var(--danger-text-color);
  --danger-gradient-background-fallback: var(--danger);
  --danger-gradient-background: linear-gradient(to right, var(--danger-gradient-1), var(--danger-gradient-2));
  --warn-gradient-color: var(--warn-text-color);
  --warn-gradient-background-fallback: var(--warn);
  --warn-gradient-background: linear-gradient(to right, var(--warn-gradient-1), var(--warn-gradient-2));
  --info-gradient-color: var(--info-text-color);
  --info-gradient-background-fallback: var(--info);
  --info-gradient-background: linear-gradient(to right, var(--info-gradient-1), var(--info-gradient-2));

  --primary-outline-color: var(--primary);
  --primary-outline-background: #e7ecf9;
  --primary-outline-border-color: var(--primary);
  --primary-outline-hover-border-color: var(--primary-hover);
  --primary-outline-hover-color: var(--primary-hover);
  --secondary-outline-color: var(--secondary-text-color);
  --secondary-outline-border-color: var(--secondary-text-color);
  --secondary-outline-background: var(--secondary);
  --secondary-outline-hover-color: var(--secondary-hover-border);
  --secondary-outline-hover-border-color: var(--secondary-hover-border);
  --success-outline-color: var(--success);
  --success-outline-background: #e7f9f5;
  --success-outline-border-color: var(--success);
  --success-outline-hover-color: var(--success-hover);
  --success-outline-hover-border-color: var(--success-hover);
  --danger-outline-color: var(--danger);
  --danger-outline-background: #f9e7e7;
  --danger-outline-border-color: var(--danger);
  --danger-outline-hover-color: var(--danger-hover);
  --danger-outline-hover-border-color: var(--danger-hover);
  --warn-outline-color: var(--warn);
  --warn-outline-border-color: var(--warn);
  --warn-outline-background: #f9ebe7;
  --warn-outline-hover-color: var(--warn-hover);
  --warn-outline-hover-border-color: var(--warn-hover);
  --info-outline-color: var(--info);
  --info-outline-border-color: var(--info);
  --info-outline-background: #e7f5f9;
  --info-outline-hover-color: var(--info-hover);
  --info-outline-hover-border-color: var(--info-hover);
}

:host([disabled]) button {
  @extend %disabled;
  pointer-events: none;
}

// sizes
:host([size='tiny']) button {
  font-size: 0.75rem;
  padding: 0.5625rem 1.0625rem;
  height: 35px;
}

:host([size='small']) button {
  font-size: 0.875rem;
  padding: 0.75rem 1.5rem;
  height: 43px;
}

:host([size='medium']) button {
  font-size: 0.875rem;
  padding: 1rem 1.8rem;
  height: 51px;
}

:host([size='large']) button {
  font-size: 0.9375rem;
  padding: 1.125rem 2rem;
  height: 59px;
}

:host([size='giant']) button {
  font-size: 1.125rem;
  padding: 1.3125rem 2.5rem;
  height: 67px;
}

@mixin handle-solid-style($status) {
  &.solid {
    background: var(--#{$status}-solid-background);
    color: var(--#{$status}-solid-color);
    @if $status == var(--status-secondary) {
      box-shadow: inset 0px 0px 0px 1px var(--#{$status}-solid-border-color);
    }

    &:hover {
      background: var(--#{$status}-solid-hover-background);
    }
  }
}

@mixin handle-gradient-style($status) {
  &.gradient {
    color: var(--#{$status}-gradient-color);
    background-color: var(--#{$status}-gradient-background-fallback);
    background: var(--#{$status}-gradient-background);
    @if $status == var(--status-secondary) {
      box-shadow: inset 0px 0px 0px 1px var(--#{$status}-gradient-border-color);
    }
  }
}

@mixin handle-outline-style($status, $use-border: true) {
  $mode: 'basic';
  @if $use-border {
    $mode: 'outline';
  }

  &.#{$mode} {
    color: var(--#{$status}-outline-color);
    background: var(--#{$status}-outline-background);
    @if $use-border == true {
      border: 1px solid var(--#{$status}-outline-border-color);
    }

    &:hover {
      color: var(--#{$status}-outline-hover-color);
      border-color: var(--#{$status}-outline-hover-border-color);
    }
  }
}

@mixin handle-basic-style($style) {
  @include handle-outline-style($style, false);
}

@mixin active($border-color) {
  &:active {
    box-shadow: 0 0 2px 4px $border-color;
    background: #2cec86;
  }
}

%disabled {
  background: $gray-50 !important;
  color: #a5a5a5 !important;
  border-color: $gray-50 !important;
}

button {
  font-family: 'Open Sans', sans-serif;
  border: none;
  padding: 18px 25px;
  font-size: 15px;
  outline: none;
  transition: 150ms ease-in;
  cursor: pointer;
  text-transform: uppercase;
  align-items: center;

  span {
    display: flex;
    align-items: center;

    i {
      margin: 0 8px 0 0;
    }

    /** when icon mode is defined to right position */
    &.reverse {
      flex-direction: row-reverse;

      i {
        margin: 0 0 0 8px;
      }
    }

    /** when onlyIcon attribute is true */
    &.no-margins {
      height: 20px;
      * {
        margin-left: 0;
        margin-right: 0;
      }
    }
  }

  &.responsive {
    width: 100%;
  }

  /* MODE */
  &.rounded {
    border-radius: 5rem;
  }
  &.square {
    border-radius: 3px;
  }
  &.radius {
    border-radius: 15px;
  }

  /* STATUS */

  &.primary {
    @include handle-solid-style(primary);
    @include handle-gradient-style(primary);
    @include handle-outline-style(primary);
    @include handle-basic-style(primary);
  }

  &.secondary {
    @include handle-solid-style(secondary);
    @include handle-gradient-style(secondary);
    @include handle-outline-style(secondary);
    @include handle-basic-style(secondary);
  }
  &.success {
    @include handle-solid-style(success);
    @include handle-gradient-style(success);
    @include handle-outline-style(success);
    @include handle-basic-style(success);
  }
  &.danger {
    @include handle-solid-style(danger);
    @include handle-gradient-style(danger);
    @include handle-outline-style(danger);
    @include handle-basic-style(danger);
  }
  &.warn {
    @include handle-solid-style(warn);
    @include handle-gradient-style(warn);
    @include handle-outline-style(warn);
    @include handle-basic-style(warn);
  }

  &.info {
    @include handle-solid-style(info);
    @include handle-gradient-style(info);
    @include handle-outline-style(info);
    @include handle-basic-style(info);
  }
}
